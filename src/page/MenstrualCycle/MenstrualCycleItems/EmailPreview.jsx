import React, { useState, useEffect } from 'react';

function EmailPreview() {
    const [scheduledEmails, setScheduledEmails] = useState([]);
    const [selectedEmail, setSelectedEmail] = useState(null);

    useEffect(() => {
        loadScheduledEmails();
        
        // Refresh every 10 seconds
        const interval = setInterval(loadScheduledEmails, 10000);
        return () => clearInterval(interval);
    }, []);

    const loadScheduledEmails = () => {
        const emails = JSON.parse(localStorage.getItem('scheduledEmails') || '[]');
        setScheduledEmails(emails.sort((a, b) => new Date(a.scheduledDate) - new Date(b.scheduledDate)));
    };

    const formatDate = (dateString) => {
        return new Date(dateString).toLocaleDateString('vi-VN', {
            weekday: 'long',
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
        });
    };

    const getEmailIcon = (type) => {
        return type === 'period' ? 'ü©∏' : 'ü•ö';
    };

    const generatePreviewHTML = (email) => {
        const emoji = email.type === 'period' ? 'ü©∏' : 'ü•ö';
        const bgColor = email.type === 'period' ? '#fecaca' : '#bbf7d0';
        
        return `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);">
                <div style="background: linear-gradient(135deg, #ec4899 0%, #8b5cf6 100%); color: white; padding: 30px 20px; text-align: center;">
                    <h1><span style="font-size: 24px; margin-right: 10px;">${emoji}</span>GenCare - Theo d√µi chu k·ª≥</h1>
                    <p>Th√¥ng b√°o t·ª± ƒë·ªông t·ª´ ·ª©ng d·ª•ng qu·∫£n l√Ω s·ª©c kh·ªèe ph·ª• n·ªØ</p>
                </div>
                
                <div style="padding: 30px 20px;">
                    <h2>${email.title}</h2>
                    
                    <div style="background-color: ${bgColor}; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #059669;">
                        <p style="margin: 0; font-size: 16px; line-height: 1.6;">${email.message}</p>
                    </div>
                    
                    <p>L·ªùi khuy√™n t·ª´ chuy√™n gia:</p>
                    <ul>
                        ${email.type === 'period' ? `
                            <li>U·ªëng ƒë·ªß n∆∞·ªõc v√† ngh·ªâ ng∆°i h·ª£p l√Ω</li>
                            <li>S·ª≠ d·ª•ng c√°c s·∫£n ph·∫©m v·ªá sinh ph√π h·ª£p</li>
                            <li>Th·ª±c hi·ªán nh·∫π nh√†ng c√°c b√†i t·∫≠p th·ªÉ d·ª•c</li>
                        ` : `
                            <li>ƒê√¢y l√† th·ªùi ƒëi·ªÉm th·ª• thai cao nh·∫•t trong chu k·ª≥</li>
                            <li>Theo d√µi c√°c d·∫•u hi·ªáu r·ª•ng tr·ª©ng</li>
                            <li>TƒÉng c∆∞·ªùng b·ªï sung axit folic n·∫øu c√≥ k·∫ø ho·∫°ch mang thai</li>
                        `}
                    </ul>
                    
                    <div style="text-align: center; margin: 30px 0;">
                        <a href="#" style="display: inline-block; background-color: #3b82f6; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px;">
                            M·ªü ·ª©ng d·ª•ng GenCare
                        </a>
                    </div>
                </div>
                
                <div style="background-color: #f3f4f6; padding: 20px; text-align: center; font-size: 12px; color: #6b7280;">
                    <p>¬© 2025 GenCare - H·ªá th·ªëng qu·∫£n l√Ω s·ª©c kh·ªèe ph·ª• n·ªØ</p>
                    <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông. Vui l√≤ng kh√¥ng reply email n√†y.</p>
                </div>
            </div>
        `;
    };

    return (
        <div className="bg-white p-6 rounded-lg shadow-lg">
            <h2 className="text-2xl font-bold text-gray-800 mb-4">üìÆ Demo Email ƒë√£ l√™n l·ªãch</h2>
            
            {scheduledEmails.length === 0 ? (
                <div className="text-center py-8">
                    <div className="text-gray-400 text-4xl mb-4">üì¨</div>
                    <p className="text-gray-600">Ch∆∞a c√≥ email n√†o ƒë∆∞·ª£c l√™n l·ªãch</p>
                    <p className="text-sm text-gray-500 mt-2">L∆∞u th√¥ng tin chu k·ª≥ ƒë·ªÉ xem demo email</p>
                </div>
            ) : (
                <>
                    <div className="space-y-3 max-h-64 overflow-y-auto mb-4">
                        {scheduledEmails.map((email) => (
                            <button 
                                key={email.id} 
                                className="w-full text-left border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition-colors"
                                onClick={() => setSelectedEmail(email)}
                            >
                                <div className="flex items-start justify-between">
                                    <div className="flex-1">
                                        <div className="flex items-center mb-2">
                                            <span className="text-xl mr-2">{getEmailIcon(email.type)}</span>
                                            <h4 className="font-semibold text-gray-800">{email.title}</h4>
                                            <span className={`ml-2 px-2 py-1 text-xs rounded-full ${
                                                email.status === 'scheduled' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'
                                            }`}>
                                                {email.status === 'scheduled' ? 'ƒê√£ l√™n l·ªãch' : 'ƒê√£ g·ª≠i'}
                                            </span>
                                        </div>
                                        <p className="text-sm text-gray-600 mb-1">G·ª≠i t·ªõi: {email.email}</p>
                                        <p className="text-xs text-gray-500">
                                            <strong>L√™n l·ªãch:</strong> {formatDate(email.scheduledDate)}
                                        </p>
                                    </div>
                                    <span className="text-blue-600 hover:text-blue-800 text-sm">
                                        Xem tr∆∞·ªõc ‚Üí
                                    </span>
                                </div>
                            </button>
                        ))}
                    </div>

                    <div className="p-3 bg-blue-50 border border-blue-200 rounded-lg">
                        <p className="text-sm text-blue-800">
                            <strong>üí° L∆∞u √Ω:</strong> ƒê√¢y l√† demo m√¥ ph·ªèng. Trong ·ª©ng d·ª•ng th·ª±c t·∫ø, email s·∫Ω ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông qua d·ªãch v·ª• nh∆∞ SendGrid, Mailgun ho·∫∑c AWS SES.
                        </p>
                    </div>
                </>
            )}

            {/* Email Preview Modal */}
            {selectedEmail && (
                <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
                    <div className="bg-white rounded-lg shadow-xl w-full max-w-4xl max-h-[90vh] overflow-hidden">
                        <div className="flex items-center justify-between p-6 border-b border-gray-200">
                            <h3 className="text-xl font-semibold text-gray-900">
                                Preview Email: {selectedEmail.title}
                            </h3>
                            <button
                                onClick={() => setSelectedEmail(null)}
                                className="text-gray-400 hover:text-gray-600"
                            >
                                ‚úï
                            </button>
                        </div>
                        
                        <div className="p-6 overflow-y-auto max-h-[70vh]">
                            <div 
                                dangerouslySetInnerHTML={{ 
                                    __html: generatePreviewHTML(selectedEmail) 
                                }}
                            />
                        </div>

                        <div className="flex justify-end space-x-3 p-6 border-t bg-gray-50">
                            <button
                                onClick={() => setSelectedEmail(null)}
                                className="px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50"
                            >
                                ƒê√≥ng
                            </button>
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
}

export default EmailPreview;
